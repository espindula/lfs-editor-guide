# Checklist for LFS Book releases. Git version.

# x.y refers to the version you are about to release
# a.b refers to the next *minor* version after the release
#  (ex: 6.2 is the minor next version after 6.1)

1.  Ensure that all needed pushes have been made by all editors.

2.  Create a branch. All the following steps will be done on that branch.

    git checkout -b x.y-rcz  # for rc

        or

    git checkout -b x.y      # for releases

3.  Edit general.ent
    a - Change "version" entity to x.y or x.y-rcz for a rc
    b - Change "short-version" entity to x.y, only for release, not for rc
    c - Change "generic-version" entity to x.y or x.y-rcz for a rc
    d - Change "versiond" entity to x.y-systemd or x.y-systemd-rcz for a rc
    e - Change "releasedate" entity if necessary

4.  Edit packages.ent to make permanent BOOTSCRIPTS-{SIZE,MD5SUM,INSTALL-KB}

5.  Edit changelog with release entry

6.  Commit all changes

    git commit -a    # edit the commit message

7.  You are about to push, double check everything. If this is the
    first rc, create an upstream branch:

    git push --set-upstream

    otherwise, just:

    git push

8.  Upload the built bootscript tarball to your home on rivendell

## WARNING ##
#
# From here on it is assumed that all scripts are run from your home directory
# on rivendell. This is required to ease the automation of the release process.

9.  Download release-script.sh from the editor-manual directory.
    ENSURE THAT YOU CHECK THE "version" AND "stable" VARIABLES! Then run the
    script. The script will pull the tagged repo and from that it will create
    all the downloadable book types and will extract a copy of each into
    ~/public_html/test. The next 4 items in this list are for testing those
    extracted versions.

10. Visually inspect the NOCHUNKS and the HTML in your browser.

11. Visually inspect the PDF with a PDF viewer.

12. Look at the XML directory and make sure it is named correctly and that
    index.xml and all the chapter directories exist in the *top-level*
    directory (e.g. LFS-BOOK-$version-XML/index.xml).

13. Compare the TXT version with the original in ~/RELEASE-$version. Use both
    diff and a visual inspection to ensure that "all" and "only" the references
    at the bottom were removed.

14. Once all inspections have been made, run the copy-book.sh and
    copy-lfs-patches.sh scripts to move the books and patches into their final
    location. This time, visually inspect that the HTML was untarred properly in
    /lfs/view and that www.linuxfromscratch.org and
    archive.linuxfromscratch.org both have all the different book formats.
    Also ensure that "all" book files and directories
    "must" be group writable and owned by the lfswww group.

# Website changes (you may wish to coordinate with a website maintainer)
# FIXME: assuming www2 repo is still svn

15. Pull the www2 repository with the following command (minus the quotes):
    "svn co svn+ssh://svn.linuxfromscratch.org/www2/html/trunk www2"
    If not already present, create the www2/lfs/errata/$version directory and if
    it is a final release (i.e. not a pre-release), recreate the "stable"
    symlink to it. You will need to cp the files from the previous release's
    errata directory and modify the index.html for the latest release version.
    The only listed errata item should be "No known errata at this time." Once
    everything is ready, svn add all needed files/dirs and commit the
    changes.

16. Create the /srv/www/www.linuxfromscratch.org/lfs/build-logs/$version
    directory and if it is a final release (i.e. not a pre-release), recreate
    the "stable" symlink to it. Upload the build logs.

17. Add the release announcement to www2/lfs/news.html, mention the release in
    www2/lfs/read.html and commit the changes.

18. Send an announcement email to the lfs-dev, lfs-support, lfs-announce,
    lfs-security, blfs-dev, blfs-support and website mailing lists.

# Cleanup stage

19. If this is a final release (i.e. not a pre-release), remove the "testing"
    branch description from www2/lfs/read.html and commit the changes.

20. If this is a final release (i.e. not a pre-release), remove the "testing"
    branch repository and comment out its line in /usr/bin/render-lfs-book.sh.

21. If this is a final release (i.e. not a pre-release), remove any pre-release
    material (books, tarballs, patches) from /home/httpd/www.linuxfromscratch.org
    "NOTE": nothing in /patches/lfs, /lfs/view, or /lfs/downloads is handled by
    the www2 repository and therefore must be done by hand. At this time, leave
    the build logs until an official policy is adopted as to what to do with
    them.

22. If this is a final release (i.e. not a pre-release), remove any pre-release
    material (books, tarballs, patches, errata) from the www2 repository and
    commit the changes.

23. Congratulations! Didn't know there was this much involved in a release, did
    ya? :) The last step should be to verify all the links on the website to
    ensure everything works properly. Of biggest concern is to check that links
    work for both the specific $version and the stable symlinks to it (like the
    read, download, build-logs, and errata links).
